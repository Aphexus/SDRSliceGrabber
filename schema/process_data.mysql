DELIMITER //


CREATE PROCEDURE PROCESS_EQUITIES()
BEGIN
    DECLARE finished INTEGER DEFAULT 0;
    DECLARE dis_id INT UNSIGNED;
    DECLARE act VARCHAR(7);
    DECLARE og_dis_id INT UNSIGNED;

    DECLARE DATA_CURSOR CURSOR FOR SELECT DISSEMINATION_ID, ACTION, ORIGINAL_DISSEMINATION_ID
    FROM EQUITIES
    WHERE (ACTION = 'CORRECT' OR ACTION = 'CANCEL') AND PROCESSED IS NULL;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

    OPEN DATA_CURSOR;

    processData: LOOP
        FETCH DATA_CURSOR INTO dis_id,act,og_dis_id;
        IF finished = 1 THEN LEAVE processData; END IF;

        IF act = 'CANCEL' THEN UPDATE EQUITIES SET CANCELED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        ELSE UPDATE EQUITIES SET CORRECTED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        END IF;

        IF ROW_COUNT() = 1 THEN UPDATE EQUITIES SET PROCESSED = TRUE WHERE DISSEMINATION_ID = dis_id; END IF;

    END LOOP processData;
END //




CREATE PROCEDURE PROCESS_FOREX()
BEGIN
    DECLARE finished INTEGER DEFAULT 0;
    DECLARE dis_id INT UNSIGNED;
    DECLARE act VARCHAR(7);
    DECLARE og_dis_id INT UNSIGNED;

    DECLARE DATA_CURSOR CURSOR FOR SELECT DISSEMINATION_ID, ACTION, ORIGINAL_DISSEMINATION_ID
    FROM FOREX
    WHERE (ACTION = 'CORRECT' OR ACTION = 'CANCEL') AND PROCESSED IS NULL;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

    OPEN DATA_CURSOR;

    processData: LOOP
        FETCH DATA_CURSOR INTO dis_id,act,og_dis_id;
        IF finished = 1 THEN LEAVE processData; END IF;

        IF act = 'CANCEL' THEN UPDATE FOREX SET CANCELED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        ELSE UPDATE FOREX SET CORRECTED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        END IF;

        IF ROW_COUNT() = 1 THEN UPDATE FOREX SET PROCESSED = TRUE WHERE DISSEMINATION_ID = dis_id; END IF;

    END LOOP processData;
END //



CREATE PROCEDURE PROCESS_RATES()
BEGIN
    DECLARE finished INTEGER DEFAULT 0;
    DECLARE dis_id INT UNSIGNED;
    DECLARE act VARCHAR(7);
    DECLARE og_dis_id INT UNSIGNED;

    DECLARE DATA_CURSOR CURSOR FOR SELECT DISSEMINATION_ID, ACTION, ORIGINAL_DISSEMINATION_ID
    FROM RATES
    WHERE (ACTION = 'CORRECT' OR ACTION = 'CANCEL') AND PROCESSED IS NULL;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

    OPEN DATA_CURSOR;

    processData: LOOP
        FETCH DATA_CURSOR INTO dis_id,act,og_dis_id;
        IF finished = 1 THEN LEAVE processData; END IF;

        IF act = 'CANCEL' THEN UPDATE RATES SET CANCELED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        ELSE UPDATE RATES SET CORRECTED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        END IF;

        IF ROW_COUNT() = 1 THEN UPDATE RATES SET PROCESSED = TRUE WHERE DISSEMINATION_ID = dis_id; END IF;

    END LOOP processData;
END //



CREATE PROCEDURE PROCESS_CREDITS()
BEGIN
    DECLARE finished INTEGER DEFAULT 0;
    DECLARE dis_id INT UNSIGNED;
    DECLARE act VARCHAR(7);
    DECLARE og_dis_id INT UNSIGNED;

    DECLARE DATA_CURSOR CURSOR FOR SELECT DISSEMINATION_ID, ACTION, ORIGINAL_DISSEMINATION_ID
    FROM CREDITS
    WHERE (ACTION = 'CORRECT' OR ACTION = 'CANCEL') AND PROCESSED IS NULL;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

    OPEN DATA_CURSOR;

    processData: LOOP
        FETCH DATA_CURSOR INTO dis_id,act,og_dis_id;
        IF finished = 1 THEN LEAVE processData; END IF;

        IF act = 'CANCEL' THEN UPDATE CREDITS SET CANCELED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        ELSE UPDATE CREDITS SET CORRECTED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        END IF;

        IF ROW_COUNT() = 1 THEN UPDATE CREDITS SET PROCESSED = TRUE WHERE DISSEMINATION_ID = dis_id; END IF;

    END LOOP processData;
END //



CREATE PROCEDURE PROCESS_COMMODITIES()
BEGIN
    DECLARE finished INTEGER DEFAULT 0;
    DECLARE dis_id INT UNSIGNED;
    DECLARE act VARCHAR(7);
    DECLARE og_dis_id INT UNSIGNED;

    DECLARE DATA_CURSOR CURSOR FOR SELECT DISSEMINATION_ID, ACTION, ORIGINAL_DISSEMINATION_ID
    FROM COMMODITIES
    WHERE (ACTION = 'CORRECT' OR ACTION = 'CANCEL') AND PROCESSED IS NULL;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

    OPEN DATA_CURSOR;

    processData: LOOP
        FETCH DATA_CURSOR INTO dis_id,act,og_dis_id;
        IF finished = 1 THEN LEAVE processData; END IF;

        IF act = 'CANCEL' THEN UPDATE COMMODITIES SET CANCELED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        ELSE UPDATE COMMODITIES SET CORRECTED_BY = dis_id WHERE DISSEMINATION_ID = og_dis_id;
        END IF;

        IF ROW_COUNT() = 1 THEN UPDATE COMMODITIES SET PROCESSED = TRUE WHERE DISSEMINATION_ID = dis_id; END IF;

    END LOOP processData;
END //



DELIMITER ;
